<?php
/**
 * File to handle single icon for a language.
 *
 * @package easy-language
 */

namespace easyLanguage;

/**
 * Object to handle single icon.
 */
class Language_Icon {

	/**
	 * Path to local file.
	 *
	 * @var mixed
	 */
	private string $file;

	/**
	 * Set lokal file.
	 *
	 * @param string $img
	 *
	 * @return void
	 */
	public function set_file( string $img ): void {
		$this->file = $img;
	}

	/**
	 * Save the icon in media db as attachment.
	 *
	 * @param string $language_code The language-code.
	 *
	 * @return void
	 */
	public function save( string $language_code ): void {
		global $wp_filesystem;
		if( !empty($this->file) ) {
			// get path.
			$img_path = trailingslashit(Helper::get_plugin_path()).'gfx/'.$this->file;

			// check if file exists there.
			if( file_exists( $img_path ) ) {
				// check if file exist in db.
				$attachment = Helper::get_attachment_by_post_name( pathinfo( $img_path, PATHINFO_FILENAME ) );

				// if an attachment for this file does not exist, check also for postmeta.
				if ( false === $attachment ) {
					$attachment = Helper::get_attachment_by_language_code( $language_code );
				}

				// if no attachment could be found, add it.
				if ( false === $attachment ) {
					// set import path.
					$import_path = trailingslashit(get_temp_dir()).$this->file;

					// copy the original to the import_path.
					WP_Filesystem();
					if( $wp_filesystem->copy( $img_path, $import_path ) ) {
						// Prepare an array of post data for the attachment.
						$attachment = array(
							'name'     => basename( $this->file ),
							'tmp_name' => $import_path,
						);

						// Insert the attachment by prevent removing the original file and get its attachment ID.
						$attachment_id = media_handle_sideload( $attachment, 0, null, array( 'post_author' => get_current_user_id() ) );

						// get attachment as object.
						if ( absint( $attachment_id ) > 0 ) {
							$attachment = get_post( $attachment_id );
						}
					}
				}

				if ( false !== $attachment ) {
					// mark this icon as generated by this plugin.
					update_post_meta( $attachment->ID, 'easy_language_icon', 1 );

					// get actual list of languages mapped to this icon.
					$language_list = get_post_meta( $attachment->ID, 'easy_language_code', true );
					if ( ! is_array( $language_list ) ) {
						$language_list = array();
					}

					if ( empty( $language_list[ $language_code ] ) ) {
						// add language-code to this icon.
						$language_list[ $language_code ] = 1;
						update_post_meta( $attachment->ID, 'easy_language_code', $language_list );
					}

					// delete icon cache in DB.
					delete_option( 'easy_language_icons' );
				}
			}
		}
	}
}
